/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.analytics.CustomDimensions', null, global);
goog.exportSymbol('proto.analytics.EventQueue', null, global);
goog.exportSymbol('proto.analytics.ProcessStatus', null, global);
goog.exportSymbol('proto.analytics.SessionData', null, global);
goog.exportSymbol('proto.analytics.TrackEventRequest', null, global);
goog.exportSymbol('proto.analytics.TrackEventResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.TrackEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.TrackEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.TrackEventRequest.displayName = 'proto.analytics.TrackEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.SessionData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.SessionData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.SessionData.displayName = 'proto.analytics.SessionData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.EventQueue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.EventQueue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.EventQueue.displayName = 'proto.analytics.EventQueue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.CustomDimensions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.CustomDimensions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.CustomDimensions.displayName = 'proto.analytics.CustomDimensions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.TrackEventResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.TrackEventResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.TrackEventResponse.displayName = 'proto.analytics.TrackEventResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.ProcessStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.ProcessStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.ProcessStatus.displayName = 'proto.analytics.ProcessStatus';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.TrackEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.TrackEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.TrackEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TrackEventRequest.toObject = function(includeInstance, msg) {
  var obj = {
    sessionData: (f = msg.getSessionData()) && proto.analytics.SessionData.toObject(includeInstance, f),
    eventQueue: (f = msg.getEventQueue()) && proto.analytics.EventQueue.toObject(includeInstance, f),
    accountId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    spaceId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.TrackEventRequest}
 */
proto.analytics.TrackEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.TrackEventRequest;
  return proto.analytics.TrackEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.TrackEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.TrackEventRequest}
 */
proto.analytics.TrackEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.analytics.SessionData;
      reader.readMessage(value,proto.analytics.SessionData.deserializeBinaryFromReader);
      msg.setSessionData(value);
      break;
    case 2:
      var value = new proto.analytics.EventQueue;
      reader.readMessage(value,proto.analytics.EventQueue.deserializeBinaryFromReader);
      msg.setEventQueue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpaceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.TrackEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.TrackEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.TrackEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TrackEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.analytics.SessionData.serializeBinaryToWriter
    );
  }
  f = message.getEventQueue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.analytics.EventQueue.serializeBinaryToWriter
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSpaceId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional SessionData session_data = 1;
 * @return {?proto.analytics.SessionData}
 */
proto.analytics.TrackEventRequest.prototype.getSessionData = function() {
  return /** @type{?proto.analytics.SessionData} */ (
    jspb.Message.getWrapperField(this, proto.analytics.SessionData, 1));
};


/** @param {?proto.analytics.SessionData|undefined} value */
proto.analytics.TrackEventRequest.prototype.setSessionData = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.analytics.TrackEventRequest.prototype.clearSessionData = function() {
  this.setSessionData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.analytics.TrackEventRequest.prototype.hasSessionData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EventQueue event_queue = 2;
 * @return {?proto.analytics.EventQueue}
 */
proto.analytics.TrackEventRequest.prototype.getEventQueue = function() {
  return /** @type{?proto.analytics.EventQueue} */ (
    jspb.Message.getWrapperField(this, proto.analytics.EventQueue, 2));
};


/** @param {?proto.analytics.EventQueue|undefined} value */
proto.analytics.TrackEventRequest.prototype.setEventQueue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.analytics.TrackEventRequest.prototype.clearEventQueue = function() {
  this.setEventQueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.analytics.TrackEventRequest.prototype.hasEventQueue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string account_id = 3;
 * @return {string}
 */
proto.analytics.TrackEventRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.analytics.TrackEventRequest.prototype.setAccountId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string space_id = 4;
 * @return {string}
 */
proto.analytics.TrackEventRequest.prototype.getSpaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.analytics.TrackEventRequest.prototype.setSpaceId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.SessionData.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.SessionData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.SessionData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.SessionData.toObject = function(includeInstance, msg) {
  var obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    adId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    appLaunchCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    browser: jspb.Message.getFieldWithDefault(msg, 4, ""),
    browserVersion: jspb.Message.getFieldWithDefault(msg, 5, ""),
    clientAppName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    deviceCategory: jspb.Message.getFieldWithDefault(msg, 7, ""),
    fingerprint: jspb.Message.getFieldWithDefault(msg, 8, ""),
    installerId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    mobileDeviceModel: jspb.Message.getFieldWithDefault(msg, 10, ""),
    operatingSystem: jspb.Message.getFieldWithDefault(msg, 11, ""),
    operatingSystemVersion: jspb.Message.getFieldWithDefault(msg, 12, ""),
    screenResolution: jspb.Message.getFieldWithDefault(msg, 13, ""),
    slyceSdkPlatform: jspb.Message.getFieldWithDefault(msg, 14, ""),
    userLocation: jspb.Message.getFieldWithDefault(msg, 15, ""),
    slyceId: jspb.Message.getFieldWithDefault(msg, 16, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.SessionData}
 */
proto.analytics.SessionData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.SessionData;
  return proto.analytics.SessionData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.SessionData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.SessionData}
 */
proto.analytics.SessionData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAppLaunchCount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrowser(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrowserVersion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientAppName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceCategory(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFingerprint(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstallerId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileDeviceModel(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatingSystem(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatingSystemVersion(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setScreenResolution(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlyceSdkPlatform(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserLocation(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlyceId(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.SessionData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.SessionData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.SessionData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.SessionData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAdId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAppLaunchCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBrowser();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBrowserVersion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getClientAppName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDeviceCategory();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFingerprint();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getInstallerId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMobileDeviceModel();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getOperatingSystem();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getOperatingSystemVersion();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getScreenResolution();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getSlyceSdkPlatform();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getUserLocation();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSlyceId();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setAccountId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ad_id = 2;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getAdId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setAdId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 app_launch_count = 3;
 * @return {number}
 */
proto.analytics.SessionData.prototype.getAppLaunchCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.analytics.SessionData.prototype.setAppLaunchCount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string browser = 4;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getBrowser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setBrowser = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string browser_version = 5;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getBrowserVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setBrowserVersion = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string client_app_name = 6;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getClientAppName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setClientAppName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string device_category = 7;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getDeviceCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setDeviceCategory = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string fingerprint = 8;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getFingerprint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setFingerprint = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string installer_id = 9;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getInstallerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setInstallerId = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string mobile_device_model = 10;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getMobileDeviceModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setMobileDeviceModel = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string operating_system = 11;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getOperatingSystem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setOperatingSystem = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string operating_system_version = 12;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getOperatingSystemVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setOperatingSystemVersion = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string screen_resolution = 13;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getScreenResolution = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setScreenResolution = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string slyce_sdk_platform = 14;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getSlyceSdkPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setSlyceSdkPlatform = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string user_location = 15;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getUserLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setUserLocation = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string slyce_id = 16;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getSlyceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setSlyceId = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string user_id = 17;
 * @return {string}
 */
proto.analytics.SessionData.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.analytics.SessionData.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.EventQueue.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.EventQueue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.EventQueue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.EventQueue.toObject = function(includeInstance, msg) {
  var obj = {
    customDimensions: (f = msg.getCustomDimensions()) && proto.analytics.CustomDimensions.toObject(includeInstance, f),
    eventAction: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eventCategory: jspb.Message.getFieldWithDefault(msg, 3, ""),
    eventLabel: jspb.Message.getFieldWithDefault(msg, 4, ""),
    hitNumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    hitTimestamp: jspb.Message.getFieldWithDefault(msg, 6, ""),
    jobId: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.EventQueue}
 */
proto.analytics.EventQueue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.EventQueue;
  return proto.analytics.EventQueue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.EventQueue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.EventQueue}
 */
proto.analytics.EventQueue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.analytics.CustomDimensions;
      reader.readMessage(value,proto.analytics.CustomDimensions.deserializeBinaryFromReader);
      msg.setCustomDimensions(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventAction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventCategory(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventLabel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHitNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHitTimestamp(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.EventQueue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.EventQueue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.EventQueue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.EventQueue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomDimensions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.analytics.CustomDimensions.serializeBinaryToWriter
    );
  }
  f = message.getEventAction();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEventCategory();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEventLabel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHitNumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getHitTimestamp();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getJobId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional CustomDimensions custom_dimensions = 1;
 * @return {?proto.analytics.CustomDimensions}
 */
proto.analytics.EventQueue.prototype.getCustomDimensions = function() {
  return /** @type{?proto.analytics.CustomDimensions} */ (
    jspb.Message.getWrapperField(this, proto.analytics.CustomDimensions, 1));
};


/** @param {?proto.analytics.CustomDimensions|undefined} value */
proto.analytics.EventQueue.prototype.setCustomDimensions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.analytics.EventQueue.prototype.clearCustomDimensions = function() {
  this.setCustomDimensions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.analytics.EventQueue.prototype.hasCustomDimensions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string event_action = 2;
 * @return {string}
 */
proto.analytics.EventQueue.prototype.getEventAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.EventQueue.prototype.setEventAction = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string event_category = 3;
 * @return {string}
 */
proto.analytics.EventQueue.prototype.getEventCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.analytics.EventQueue.prototype.setEventCategory = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string event_label = 4;
 * @return {string}
 */
proto.analytics.EventQueue.prototype.getEventLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.analytics.EventQueue.prototype.setEventLabel = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 hit_number = 5;
 * @return {number}
 */
proto.analytics.EventQueue.prototype.getHitNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.analytics.EventQueue.prototype.setHitNumber = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string hit_timestamp = 6;
 * @return {string}
 */
proto.analytics.EventQueue.prototype.getHitTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.analytics.EventQueue.prototype.setHitTimestamp = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string job_id = 7;
 * @return {string}
 */
proto.analytics.EventQueue.prototype.getJobId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.analytics.EventQueue.prototype.setJobId = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.CustomDimensions.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.CustomDimensions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.CustomDimensions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.CustomDimensions.toObject = function(includeInstance, msg) {
  var obj = {
    lensId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    layerId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.CustomDimensions}
 */
proto.analytics.CustomDimensions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.CustomDimensions;
  return proto.analytics.CustomDimensions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.CustomDimensions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.CustomDimensions}
 */
proto.analytics.CustomDimensions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLensId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLayerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.CustomDimensions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.CustomDimensions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.CustomDimensions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.CustomDimensions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLensId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLayerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string lens_id = 1;
 * @return {string}
 */
proto.analytics.CustomDimensions.prototype.getLensId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.CustomDimensions.prototype.setLensId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string layer_id = 2;
 * @return {string}
 */
proto.analytics.CustomDimensions.prototype.getLayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.CustomDimensions.prototype.setLayerId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.TrackEventResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.TrackEventResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.TrackEventResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TrackEventResponse.toObject = function(includeInstance, msg) {
  var obj = {
    topic: jspb.Message.getFieldWithDefault(msg, 1, ""),
    msgType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    taskId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdBy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    jobId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    name: jspb.Message.getFieldWithDefault(msg, 7, ""),
    processStatus: (f = msg.getProcessStatus()) && proto.analytics.ProcessStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.TrackEventResponse}
 */
proto.analytics.TrackEventResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.TrackEventResponse;
  return proto.analytics.TrackEventResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.TrackEventResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.TrackEventResponse}
 */
proto.analytics.TrackEventResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 8:
      var value = new proto.analytics.ProcessStatus;
      reader.readMessage(value,proto.analytics.ProcessStatus.deserializeBinaryFromReader);
      msg.setProcessStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.TrackEventResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.TrackEventResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.TrackEventResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TrackEventResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopic();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMsgType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getJobId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProcessStatus();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.analytics.ProcessStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional string topic = 1;
 * @return {string}
 */
proto.analytics.TrackEventResponse.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.TrackEventResponse.prototype.setTopic = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string msg_type = 2;
 * @return {string}
 */
proto.analytics.TrackEventResponse.prototype.getMsgType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.TrackEventResponse.prototype.setMsgType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string account_id = 3;
 * @return {string}
 */
proto.analytics.TrackEventResponse.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.analytics.TrackEventResponse.prototype.setAccountId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string task_id = 4;
 * @return {string}
 */
proto.analytics.TrackEventResponse.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.analytics.TrackEventResponse.prototype.setTaskId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string created_by = 5;
 * @return {string}
 */
proto.analytics.TrackEventResponse.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.analytics.TrackEventResponse.prototype.setCreatedBy = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string job_id = 6;
 * @return {string}
 */
proto.analytics.TrackEventResponse.prototype.getJobId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.analytics.TrackEventResponse.prototype.setJobId = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string name = 7;
 * @return {string}
 */
proto.analytics.TrackEventResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.analytics.TrackEventResponse.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional ProcessStatus process_status = 8;
 * @return {?proto.analytics.ProcessStatus}
 */
proto.analytics.TrackEventResponse.prototype.getProcessStatus = function() {
  return /** @type{?proto.analytics.ProcessStatus} */ (
    jspb.Message.getWrapperField(this, proto.analytics.ProcessStatus, 8));
};


/** @param {?proto.analytics.ProcessStatus|undefined} value */
proto.analytics.TrackEventResponse.prototype.setProcessStatus = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.analytics.TrackEventResponse.prototype.clearProcessStatus = function() {
  this.setProcessStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.analytics.TrackEventResponse.prototype.hasProcessStatus = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.ProcessStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.ProcessStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.ProcessStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.ProcessStatus.toObject = function(includeInstance, msg) {
  var obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    display: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.ProcessStatus}
 */
proto.analytics.ProcessStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.ProcessStatus;
  return proto.analytics.ProcessStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.ProcessStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.ProcessStatus}
 */
proto.analytics.ProcessStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.ProcessStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.ProcessStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.ProcessStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.ProcessStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDisplay();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.analytics.ProcessStatus.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.analytics.ProcessStatus.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string display = 2;
 * @return {string}
 */
proto.analytics.ProcessStatus.prototype.getDisplay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.ProcessStatus.prototype.setDisplay = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.analytics);
